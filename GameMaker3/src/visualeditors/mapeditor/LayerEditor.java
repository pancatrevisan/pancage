/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package visualeditors.mapeditor;

import core.graphics.ImageBank;
import core.map.Background;
import core.map.BackgroundLayer;
import core.map.Map;
import core.phisics.Vector2D;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Image;
import java.awt.event.WindowEvent;
import java.awt.event.WindowListener;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import tester.TestFrame;
import tester.background.TestBackgroundGame;
import visualeditors.GuiHelper;

/**
 *
 * @author panca
 */
public class LayerEditor extends javax.swing.JDialog {

    private BackgroundLayer layer;
    private JPanel previewImagePanel;
    private String imageName;
    private Image image;
    private Color selectedColor;
    
    private int screenResX, screenResY;
    private Map mapReference;
    private Background bkg;//bkg or foreground
    /**
     * Creates new form LayerEditor
     */
    public LayerEditor(java.awt.Frame parent, boolean modal, BackgroundLayer layer, Map map,Background bkg, boolean edit) {
        super(parent, modal);
        this.bkg = bkg;
        mapReference = map;
        this.screenResX = map.getWindowWidth();
        this.screenResY = map.getWindowHeight();
        this.layer = layer;
        previewImagePanel = new JPanel(){
            public void paint(Graphics g)
            {
                if(image!= null)
                    g.drawImage(image, 0,0, null);
            }
        };
        initComponents();
        if(edit)
        {
            
            if(layer.getLayerType() == BackgroundLayer.TYPE_COLOR)
            {
                colorCheck.setSelected(true);
                selectedColor = layer.getColor();
                jScrollPane1.setViewportView(jPanel1);
            }
            else if(layer.getLayerType() == BackgroundLayer.TYPE_IMAGE)
            {
                imageCheck.setSelected(true);
                imageName = layer.getImageName();
                image = layer.getImage();
                jScrollPane1.setViewportView(jPanel3);
            }
        }
    }

    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        fillWindowCheck = new javax.swing.JCheckBox();
        tileWindowXCheck = new javax.swing.JCheckBox();
        tileWindowYCheck = new javax.swing.JCheckBox();
        jLabel6 = new javax.swing.JLabel();
        speedMoveX = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        speedMoveY = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        tileWindowCheck = new javax.swing.JCheckBox();
        moveCheck = new javax.swing.JCheckBox();
        jButton3 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane(previewImagePanel);
        jColorChooser1 = new javax.swing.JColorChooser();
        jScrollPane1 = new javax.swing.JScrollPane();
        jLabel2 = new javax.swing.JLabel();
        colorCheck = new javax.swing.JCheckBox();
        imageCheck = new javax.swing.JCheckBox();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();

        jLabel3.setText("Color:");

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        jLabel4.setText("Preview:");

        jButton1.setText("Choose");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton6.setText("Preview Layer");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel3)
                        .addGap(28, 28, 28)
                        .addComponent(jButton1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel4))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(132, 132, 132)
                        .addComponent(jButton6)))
                .addContainerGap(149, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(68, 68, 68)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jButton1))
                .addGap(9, 9, 9)
                .addComponent(jLabel4)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jLabel5.setText("Image:");

        fillWindowCheck.setText("Fill Window");
        fillWindowCheck.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                fillWindowCheckStateChanged(evt);
            }
        });
        fillWindowCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fillWindowCheckActionPerformed(evt);
            }
        });

        if(layer!= null)
        {
            if(layer.isTileFromCamX())
            tileWindowXCheck.setSelected(true);
        }
        tileWindowXCheck.setText("Tile Window X");

        if(layer!= null)
        {
            if(layer.isTileFromCamY())
            tileWindowYCheck.setSelected(true);
        }
        tileWindowYCheck.setText("Tile Window Y");

        jLabel6.setText("Speed X:");

        if(layer!= null)
        {
            if(layer.isMoveLayer())
            speedMoveX.setText(""+layer.getMoveSpeed().x);
        }

        jLabel7.setText("Speed Y:");

        if(layer!= null)
        {
            if(layer.isMoveLayer())
            speedMoveY.setText(""+layer.getMoveSpeed().y);
        }

        jButton2.setText("Choose...");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        if(layer!= null)
        {
            if(layer.isTileFromCamX() || layer.isTileFromCamY())
            tileWindowCheck.setSelected(true);
        }
        tileWindowCheck.setText("Tile Window");
        tileWindowCheck.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                tileWindowCheckStateChanged(evt);
            }
        });
        tileWindowCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tileWindowCheckActionPerformed(evt);
            }
        });

        if(layer!= null)
        {
            if(layer.isMoveLayer())
            moveCheck.setSelected(true);
        }
        moveCheck.setText("Move");
        moveCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                moveCheckActionPerformed(evt);
            }
        });

        jButton3.setText("Preview Layer");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(jScrollPane2))
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel3Layout.createSequentialGroup()
                            .addGap(118, 118, 118)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(tileWindowXCheck)
                                .addComponent(tileWindowYCheck))
                            .addGap(48, 48, 48)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel3Layout.createSequentialGroup()
                                    .addComponent(jLabel6)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(speedMoveX, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(moveCheck)
                                .addGroup(jPanel3Layout.createSequentialGroup()
                                    .addComponent(jLabel7)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(speedMoveY, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGroup(jPanel3Layout.createSequentialGroup()
                            .addContainerGap()
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel3Layout.createSequentialGroup()
                                    .addComponent(jLabel5)
                                    .addGap(30, 30, 30)
                                    .addComponent(jButton2))
                                .addGroup(jPanel3Layout.createSequentialGroup()
                                    .addComponent(fillWindowCheck)
                                    .addGap(29, 29, 29)
                                    .addComponent(tileWindowCheck))
                                .addGroup(jPanel3Layout.createSequentialGroup()
                                    .addGap(10, 10, 10)
                                    .addComponent(jButton3))))))
                .addGap(41, 41, 41))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fillWindowCheck)
                    .addComponent(tileWindowCheck)
                    .addComponent(moveCheck))
                .addGap(4, 4, 4)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tileWindowXCheck)
                    .addComponent(jLabel6)
                    .addComponent(speedMoveX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel7)
                        .addComponent(speedMoveY, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(tileWindowYCheck))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 138, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton3)
                .addGap(30, 30, 30))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel2.setText("Layer Type:");

        colorCheck.setText("Color");
        colorCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                colorCheckActionPerformed(evt);
            }
        });

        imageCheck.setText("Image");
        imageCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                imageCheckActionPerformed(evt);
            }
        });

        jButton4.setText("Apply");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Cancel");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(colorCheck)
                        .addGap(18, 18, 18)
                        .addComponent(imageCheck)
                        .addGap(0, 277, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton5)
                .addGap(94, 94, 94)
                .addComponent(jButton4)
                .addGap(168, 168, 168))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(colorCheck)
                    .addComponent(imageCheck))
                .addGap(6, 6, 6)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 262, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton4)
                    .addComponent(jButton5))
                .addGap(19, 19, 19))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void fillWindowCheckStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_fillWindowCheckStateChanged
        // TODO add your handling code here:
        
    }//GEN-LAST:event_fillWindowCheckStateChanged

    private void tileWindowCheckStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_tileWindowCheckStateChanged

    }//GEN-LAST:event_tileWindowCheckStateChanged

    private void colorCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_colorCheckActionPerformed
        // TODO add your handling code here:
        if(colorCheck.isSelected())
        {
            imageCheck.setSelected(false);
            jScrollPane1.setViewportView(jPanel1);
        }
    }//GEN-LAST:event_colorCheckActionPerformed

    private void imageCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_imageCheckActionPerformed
        // TODO add your handling code here:
        if(imageCheck.isSelected())
        {
            colorCheck.setSelected(false);
            jScrollPane1.setViewportView(jPanel3);
        }
    }//GEN-LAST:event_imageCheckActionPerformed

    private void fillWindowCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fillWindowCheckActionPerformed
        // TODO add your handling code here:
        if(fillWindowCheck.isSelected())
        {
            tileWindowCheck.setSelected(false);
            moveCheck.setSelected(false);
            
            tileWindowXCheck.setEnabled(false);
            tileWindowYCheck.setEnabled(false);
            speedMoveX.setEnabled(false);
            speedMoveY.setEnabled(false);
        }
    }//GEN-LAST:event_fillWindowCheckActionPerformed

    private void tileWindowCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tileWindowCheckActionPerformed
        // TODO add your handling code here:
        if(tileWindowCheck.isSelected()){
           fillWindowCheck.setSelected(false);
            moveCheck.setSelected(false);
            
            tileWindowXCheck.setEnabled(true);
            tileWindowYCheck.setEnabled(true);
            speedMoveX.setEnabled(false);
            speedMoveY.setEnabled(false);
        }
    }//GEN-LAST:event_tileWindowCheckActionPerformed

    private void moveCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_moveCheckActionPerformed
        // TODO add your handling code here:
        if(moveCheck.isSelected())
        {
            fillWindowCheck.setSelected(false);
            tileWindowCheck.setSelected(false);
            
            tileWindowXCheck.setEnabled(false);
            tileWindowYCheck.setEnabled(false);
            speedMoveX.setEnabled(true);
            speedMoveY.setEnabled(true);
        }
    }//GEN-LAST:event_moveCheckActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        //apply evty
        if(colorCheck.isSelected())
        {
            configColorLayer();
            this.dispose();
        }
        else if(imageCheck.isSelected())
        {
            this.configImageLayer();
            this.dispose();
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        bkg.getLayers().remove(layer);
        this.dispose();
    }//GEN-LAST:event_jButton5ActionPerformed

    
 private void configColorLayer()
 {
     layer.setData(null, selectedColor, BackgroundLayer.TYPE_COLOR);
 }
    
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:

        imageName = GuiHelper.copyImage(this.getContentPane());
        image = ImageBank.getImage(imageName);
        if(image == null){
            ImageBank.putImage(imageName);
            image = ImageBank.getImage(imageName);
        }
        Dimension pSize = new Dimension(image.getWidth(rootPane), image.getHeight(rootPane));
        previewImagePanel.setPreferredSize(pSize);
        previewImagePanel.setMaximumSize(pSize);
        previewImagePanel.setMinimumSize(pSize);
        previewImagePanel.updateUI();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
        Color c = javax.swing.JColorChooser.showDialog(this, "Choose Background Color", jPanel2.getBackground());
        jPanel2.setBackground(c);
        selectedColor = c;
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void configImageLayer()
    {
        if(imageName == null || imageName.length() <= 0)
        {
            JOptionPane.showMessageDialog(this, "Choose a image first!");
            return;
        }
        
        layer.setMoveLayer(false);
        this.layer.setData(imageName, null, BackgroundLayer.TYPE_IMAGE);
        
        
        if(tileWindowCheck.isSelected())
        {
            layer.setTileFromCamX(tileWindowXCheck.isSelected());
            layer.setTileFromCamY(tileWindowYCheck.isSelected());
        }
        else if(fillWindowCheck.isSelected())
        {
            layer.setFillWindow(true);
        }
        else if(moveCheck.isSelected())
        {
            Vector2D v = new Vector2D();
            v.x = Double.parseDouble(speedMoveX.getText());
            v.y = Double.parseDouble(speedMoveY.getText());
            layer.setMoveLayer(true);
            layer.setMoveSpeed(v);
        }
    }
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        configImageLayer();
        final TestBackgroundGame tbg = new TestBackgroundGame(screenResX, screenResY,60, mapReference);
        TestFrame t = new TestFrame(tbg);
        
        
        t.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        
        t.setSize(mapReference.getWindowWidth(), mapReference.getWindowHeight());
        t.setVisible(true);
        t.setAlwaysOnTop(true);
        new Thread(t).start();
        //j.requestFocusInWindow();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        configColorLayer();
        final TestBackgroundGame tbg = new TestBackgroundGame(screenResX, screenResY,60, mapReference);
        TestFrame t = new TestFrame(tbg);
        
        t.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        
        t.setSize(mapReference.getWindowWidth(), mapReference.getWindowHeight());
        t.setVisible(true);
        
        new Thread(t).start();
    }//GEN-LAST:event_jButton6ActionPerformed

    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox colorCheck;
    private javax.swing.JCheckBox fillWindowCheck;
    private javax.swing.JCheckBox imageCheck;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JColorChooser jColorChooser1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JCheckBox moveCheck;
    private javax.swing.JTextField speedMoveX;
    private javax.swing.JTextField speedMoveY;
    private javax.swing.JCheckBox tileWindowCheck;
    private javax.swing.JCheckBox tileWindowXCheck;
    private javax.swing.JCheckBox tileWindowYCheck;
    // End of variables declaration//GEN-END:variables
}
